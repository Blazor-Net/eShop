@inject IShoppingCartStateStore shoppingCartSateStore
@implements IDisposable
<div>
    <button type="button" class="btn btn-primary">
        Cart <span class="badge badge-light"> @lineItemsCount</span>
        <span class="sr-only">unread messages</span>
    </button>   
</div>
@code {

    private int lineItemsCount = 0;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            shoppingCartSateStore.AddStateChangeListeners(HandleShoppingCartStateChange);
            lineItemsCount = await shoppingCartSateStore.GetItemsCount();
            StateHasChanged();
        }
    }
    private async void HandleShoppingCartStateChange() {
        lineItemsCount = await shoppingCartSateStore.GetItemsCount();
        StateHasChanged();
    }
    public void Dispose()
    {
        shoppingCartSateStore.RemoveStateChangeListeners(HandleShoppingCartStateChange);
    }

}

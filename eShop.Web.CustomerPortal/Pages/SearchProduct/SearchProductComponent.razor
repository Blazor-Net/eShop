@page "/products"
@inject ISearchProductUseCase  searchProduct

<div class="text-center"><h1>Product Catalogue  </h1></div>
<br />
<SearchBarComponent OnSearch="HandleSearch"></SearchBarComponent>
<br />

        @if (products.Count() < 0 && products == null)
        {
            <div class="spinner"></div>
        }
        @if (products.Count() > 0 && products != null)
        {
            <div class="card-deck">
                @foreach (var product in products)
                {
                <div class="card m-3" style="min-width: 10rem; max-width:15.5%;">
                    <div class="card-header">
                        <h3 class="text-center"> @product.Brand</h3>
                    </div>
                    <img class="card-img-top imageThumbnail" src="@product.ImageLink" />
                    @if (@product.InStock <= 0)
                    {
                        <button type="button" class="badge badge-light">
                            <span class="badge badge-danger">Out of Stock</span>
                        </button>
                    }
                    else
                    {
                        <button type="button" class="badge badge-light">
                            InStock <span class="badge badge-success">@product.InStock</span>
                        </button>
                    }

                    <div class="card-footer text-center">
                        <a href="@($"products/{product.ProductId}")" class="btn btn-primary m-1">View</a>
                    </div>
                </div>
                }
            </div>
        }
        else
        {
            <text>Products not found</text>
        }
    
    @code {
        private IEnumerable<Product> products;

        // OnInitialized method is always called first time when application is loaded
        protected override void OnInitialized()
        {
            base.OnInitialized();
            // Get all the products
            products = searchProduct.Excecute();
        }

        private void HandleSearch(string filter)
        {
            // Get specific product by Name
            products = searchProduct.Excecute(filter);
        }

    }
